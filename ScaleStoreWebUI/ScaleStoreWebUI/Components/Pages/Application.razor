@page "/applications"
@inject ScaleStoreApiService ScaleStoreApiService
@inject ProjectPreferenceApiService ProjectPreferenceApiService
@inject ILogger<Application> Logger
@inject NavigationManager NavigationManager
@attribute [StreamRendering(true)]


<h3>Applications</h3>

<NavLink class="btn btn-primary" href="/applications/create">
    Create
</NavLink>

@if (Applications is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Application Name</th>
                <th>Project ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var application in Applications)
            {
                <tr>
                    <td>@application.Name</td>
                    <td>@application.ProjectId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<ApplicationTableRow>? Applications = null;
    int ProjectId = 0;

    protected override async Task OnInitializedAsync()
    {
        await InitializeDataInPage();
    }



    async Task InitializeDataInPage()
    {
        var projectPreference = await ProjectPreferenceApiService.GetProjectPreference(1);
        ProjectId = projectPreference.ProjectId;

        Applications = await ScaleStoreApiService.GetApplications(ProjectId);
        Logger.LogDebug("Applications: {0}", Applications);
    }

}
