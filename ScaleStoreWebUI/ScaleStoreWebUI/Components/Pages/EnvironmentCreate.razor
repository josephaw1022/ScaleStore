@page "/environments/create"
@using ServiceScalingDTO
@using PreferenceDTO
@inject ILogger<ApplicationCreate> Logger
@inject ScaleStoreApiService ScaleStoreApiService
@inject ProjectPreferenceApiService ProjectPreferenceApiService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<button class="btn btn-danger rounded-2 px-2 " @onclick="GoBack">
    Back
</button>

@if (!loading)
{
    <div class="container mt-4">
        <h2>
            Create Environment
        </h2>
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <EditForm Model="@this" OnSubmit="@HandleValidSubmit" FormName="CreateEnvironmentForm">
                    <div class="mb-3">
                        <InputText @bind-Value="Name" />
                    </div>
                    <DataAnnotationsValidator />
                    <button type="submit" class="btn btn-primary">Create</button>
                </EditForm>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code {

    ProjectPreference projectPreference = new();
    bool loading = false;


    [SupplyParameterFromForm]
    public string? Name { get; set; }

    protected override async Task OnInitializedAsync()
    {
        projectPreference = await ProjectPreferenceApiService.GetProjectPreference(1);
    }

    async Task HandleValidSubmit()
    {
        loading = true;

        Logger.LogInformation($"Environment Name: {Name}, ProjectId: {projectPreference.ProjectId}");

        var success = await ScaleStoreApiService.CreateEnvironment(Name ?? "", projectPreference.ProjectId);

        Logger.LogInformation($"Environment created?: {success}");

        NavigationManager.NavigateTo("/environments");
    }

    void GoBack()
    {
        Logger.LogInformation("Go back to applications page");
        NavigationManager.NavigateTo("/environments");
    }

}