@page "/projects/create"
@inject ScaleStoreApiService ScaleStoreApiService
@inject NavigationManager NavigationManager
@inject ILogger<ProjectsCreate> logger
@attribute [StreamRendering(true)]
@rendermode InteractiveServer



<button class="btn btn-danger rounded-2 px-2 mb-4 " @onclick="GoBack">
    Go Back
</button>

@if (!loading)
{
    <div class="container mt-4">
        <h2>
            Create Project
        </h2>
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <EditForm Model="@this" OnSubmit="@HandleValidSubmit" FormName="CreateProjectForm">
                    <div class="mb-3">
                        <InputText @bind-Value="Name" />
                    </div>
                    <DataAnnotationsValidator />
                    <button type="submit" class="btn btn-primary">Create</button>
                </EditForm>
            </div>
        </div>
    </div>
}

else
{
    <p><em>Loading...</em></p>
}



@code {

    [SupplyParameterFromForm]
    public string? Name { get; set; }

    bool loading = false;

    async Task HandleValidSubmit()
    {
        loading = true;

        var success = await ScaleStoreApiService.CreateProject(Name ?? "");

        if (success)
        {
            NavigationManager.NavigateTo("/projects");
        }
        else
        {
            logger.LogError("Failed to create project");
        }
    }


    void GoBack()
    {
        NavigationManager.NavigateTo("/projects");
    }

}
